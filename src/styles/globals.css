@import 'tailwindcss';
@import './base.css';
@import './utilities.css';
@import './components.css';
@import 'tw-animate-css';
@plugin 'tailwind-scrollbar';
@custom-variant dark (&:is(.dark *));

/*
 * @theme vs @theme inline - Critical Difference for CSS Variable Injection
 *
 * WITHOUT inline (@theme):
 * - Variables are injected at :root level globally
 * - Can be overridden by other CSS rules with same or higher specificity
 * - Example: :root { --color-primary: #3b82f6; }
 * - Allows for runtime overrides and theming flexibility
 *
 * WITH inline (@theme inline):
 * - Variables are injected directly where they're being used (scoped injection)
 * - Cannot be easily overridden due to higher specificity in generated CSS
 * - Provides stronger encapsulation but less flexibility
 * - Better performance as variables are resolved at build time
 *
 * Reference: https://stackoverflow.com/questions/79705933/should-i-use-theme-or-theme-inline
 */

@theme inline {
	/* To completely disable the default theme and use only custom values, set the global theme variable namespace to initial: */
	/* --*: initial; */

	/* Configure Tailwind Theme Variables */

	/* Brand Colors */
	/* For OKLCH color preview support in VS Code, install this extension:
	https://marketplace.visualstudio.com/items?itemName=SwiftlyDaniel.oklch-color-visualiser */
	--color-black: oklch(0 0 0);
	--color-white: oklch(1 0 0);
	--color-gray: oklch(0.5897 0 0);
	--color-cream: oklch(0.9865 0.013 82.4);
	--color-cream-dark: oklch(0.9669 0.0272 83.54);
	--color-orange: oklch(0.5657 0.1602 37.87);
	--color-orange-dark: oklch(0.3696 0.1153 31.86);
	--color-blue: oklch(0.6631 0.0437 241.72);

	/* Semantic Colors */
	--color-accent: var(--color-orange);
	--color-subtle: color-mix(in oklab, var(--color-gray) 20%, transparent);
	--color-placeholder: color-mix(in oklab, var(--color-gray) 80%, transparent);

	--spacing-contain: var(--s-contain);
	--spacing-contain-dynamic: var(--s-contain-dynamic);
	--spacing-section: var(--s-section);
	--spacing-section-half: var(--s-section-half);
	--spacing-header: var(--h-header);
	--spacing-contain-max: var(--s-contain-max);

	--shadow-default: 0px 12px 64px rgba(0, 0, 0, 0.12);

	--height-header: var(--h-header);
	--height-footer: var(--h-footer);
	--height-main: var(--h-main);

	--aspect-16/9: 16 / 9;
	--aspect-4/3: 4 / 3;
	--aspect-3/4: 3 / 4;

	--ease-sin-in-out: cubic-bezier(0.37, 0, 0.63, 1);
	--ease-quad-in-out: cubic-bezier(0.45, 0, 0.55, 1);
	--ease-cubic-in-out: cubic-bezier(0.65, 0, 0.35, 1);
	--ease-quart-in-out: cubic-bezier(0.76, 0, 0.24, 1);
	--ease-quint-in-out: cubic-bezier(0.83, 0, 0.17, 1);
	--ease-expo-in-out: cubic-bezier(0.87, 0, 0.13, 1);
	--ease-circ-in-out: cubic-bezier(0.85, 0, 0.15, 1);

	--duration-200: 200ms;
	--duration-400: 400ms;
	--duration-600: 600ms;
	--duration-800: 800ms;
	--duration-1000: 1000ms;
	--duration-1200: 1200ms;

	--delay-200: 200ms;
	--delay-400: 400ms;
	--delay-600: 600ms;
	--delay-800: 800ms;
	--delay-1000: 1000ms;
	--delay-1200: 1200ms;

	--animate-fade-in: fade-in 0.6s var(--ease-circ-in-out);
	--animate-fade-out: fade-out 0.6s var(--ease-circ-in-out);
	--animate-slide-in-top: slide-in-top 0.6s var(--ease-circ-in-out);
	--animate-slide-out-top: slide-out-top 0.6s var(--ease-circ-in-out);
	--animate-slide-in-right: slide-in-right 0.6s var(--ease-circ-in-out);
	--animate-slide-out-right: slide-out-right 0.6s var(--ease-circ-in-out);
	--animate-slide-in-bottom: slide-in-bottom 0.6s var(--ease-circ-in-out);
	--animate-slide-out-bottom: slide-out-bottom 0.6s var(--ease-circ-in-out);
	--animate-slide-in-left: slide-in-left 0.6s var(--ease-circ-in-out);
	--animate-slide-out-left: slide-out-left 0.6s var(--ease-circ-in-out);
	--animate-rotate: rotate 2s linear infinite;
	--animate-rotate-center: rotate-center 4s linear infinite;
	--animate-rotate-center-inverse: rotate-center-inverse 4s linear infinite;
	--animate-slide-in-right: slide-in-right 0.4s cubic-bezier(0.65, 0, 0.35, 1)
		both;
	--animate-slide-out-right: slide-out-right 0.4s cubic-bezier(0.65, 0, 0.35, 1)
		both;
	--animate-rotate-loader: rotate 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;
	--animate-accordion-down: accordion-down 0.4s ease-out;
	--animate-accordion-up: accordion-up 0.4s ease-out;
}
